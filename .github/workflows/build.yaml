name: 'Build Container Image'
on:
#   push:
#     branches: main
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: environment
        options: 
        - DEV
        - PROD
env:
    NAMESPACE: ${{ vars.NAMESPACE }}
    SVC_NAME: ${{ vars.SVC_NAME }}
    SVC_PORT: ${{ vars.SVC_PORT }}
    SVC_TARGETPORT: ${{ vars.SVC_TARGETPORT }}
    REPONAME: ${{ github.event.repository.name }}

#   DOCKERHUB_ID: ${{ secrets.DOCKERHUB_ID }}
#   DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
jobs:
  build-container-image:
    name: Build
    environment: ${{ github.event.inputs.environment }}
    runs-on: ubuntu-latest
    steps:
      # checkout to the repository on the build machine
      - name: Checkout
        uses: actions/checkout@v3
      - name: envsubst
        run : |
          envsubst < kube_manifests/namespace.tpl > namespace.yml && cat ./namespace.yml
          envsubst < kube_manifests/service.tpl > service.yml && cat ./service.yml
          envsubst < kube_manifests/doppler-secret.tpl > doppler-secret.yml && cat ./doppler-secret.yml
      - uses: azure/setup-kubectl@v3
        with:
          version: '1.25' # default is latest stable
        id: install
      - name: kubectl version
        run : kubectl version --short
    #   # envsubs
    #   - name: npm install
    #     run: sudo apt-get update && sudo apt-get install gettext-base && envsubst --version
      # checkout to the repository on the build machine
    #   - name: Install Node
    #     uses: actions/setup-node@v3
    #     with:
    #       node-version: '14'
    #   - name: Print env
    #     run: echo "${{ github.event.inputs.environment }}"
    #   - name: npm install
    #     run: npm install 
    #   - name: npm build
    #     run: npm run build
    #   # login to Docker Hub using the secrets provided
    #   - name: Login to Docker Hub
    #     uses: docker/login-action@v2
    #     with:
    #       username: ${{ secrets.DOCKERHUB_ID}}
    #       password: ${{ secrets.DOCKERHUB_PASSWORD }}
    #   # create a buildkit builder instance
    #   - name: setup Docker Buildx
    #     uses: docker/setup-buildx-action@v2
    #   # build the container image and push it to DockerHub.
    #   - name: Build and push
    #     uses: docker/build-push-action@v4
    #     with:
    #       context: .
    #       file: ./build/Dockerfile
    #       push: true
    #       tags: ${{ secrets.DOCKERHUB_ID }}/demo-app:dev