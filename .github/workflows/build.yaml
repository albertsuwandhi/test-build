name: 'Build Container Image'
on:
#   push:
#     branches: main
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: environment
        options: 
        - DEV
        - PROD
# env:
#     REPONAME: ${{ github.event.repository.name }}
jobs:
  build-container-image:
    name: Build Container Image
    environment: ${{ github.event.inputs.environment }}
    # env:
    #     NAMESPACE: ${{ vars.NAMESPACE }}
    #     SVC_NAME: ${{ vars.SVC_NAME }}
    #     SVC_PORT: ${{ vars.SVC_PORT }}
    #     SVC_TARGETPORT: ${{ vars.SVC_TARGETPORT }}
    runs-on: ubuntu-latest
    steps:
      # checkout to the repository on the build machine
      - name: Checkout
        uses: actions/checkout@v3
      - id: commit
        uses: prompt/actions-commit-hash@v3
      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: '14'
          cache: "npm"
          cache-dependency-path: package-lock.json
      - name: npm install build 
        run: | 
          npm install
          npm run build
      # Login to Docker Hub using the secrets provided
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_ID}}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      # create a buildkit builder instance
      - name: setup Docker Buildx
        uses: docker/setup-buildx-action@v2
      # build the container image and push it to DockerHub.
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./build/Dockerfile
          push: true
          tags: | 
            ${{ secrets.DOCKERHUB_ID }}/demo-app:dev
            ${{ secrets.DOCKERHUB_ID }}/demo-app:${{ steps.commit.outputs.short }}
  deploy:
    name: Deploy to EKS
    environment: ${{ github.event.inputs.environment }}
    env:
        NAMESPACE: ${{ vars.NAMESPACE }}
        REPONAME: ${{ github.event.repository.name }}
        SVC_NAME: ${{ vars.SVC_NAME }}
        SVC_PORT: ${{ vars.SVC_PORT }}
        SVC_TARGETPORT: ${{ vars.SVC_TARGETPORT }}
        DOCKERHUB_ID: ${{ secrets.DOCKERHUB_ID }}
        ENV: ${{ github.event.inputs.environment }}
    needs: ["build-container-image"]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: envsubst
      run : |
       envsubst < kube_manifests/deployment.tpl > deployment.yml && cat ./deployment.yml 
    - name: Install kubectl 
      run : |
       curl -LO "https://dl.k8s.io/release/v1.25.2/bin/linux/amd64/kubectl"
       sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-southeast-1
    - name: update kubeconfig
      run: |
        aws eks update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }} --region=ap-southeast-1
    # - name: kubectl get nodes 
    #   run: |
    #     kubectl get nodes -o wide
    - name: Apply YAML
      run: |
        kubectl apply -f deployment.yml
        kubectl rollout restart deployment web-api --namespace=${NAMESPACE}
             