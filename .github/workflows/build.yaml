name: 'Build and Deploy to Dev Cluster'

on:
  push:
    branches-ignore:
      - main
  workflow_dispatch:

permissions:
  id-token: write # This is required for AWS oidc connection
  contents: read # This is required for actions/checkout
  pull-requests: write # This is required for gh bot to comment PR

jobs:
  build-push-container-image:
    name: Build and Push Container Image
    environment: DEV
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - id: commit
        uses: prompt/actions-commit-hash@v3
      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: '14'
          cache: "npm"
          cache-dependency-path: package-lock.json
      - name: npm install build 
        run: | 
          npm install
          npm run build
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_ID}}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: setup Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./build/Dockerfile
          push: true
          tags: | 
            ${{ secrets.DOCKERHUB_ID }}/demo-app:DEV
            ${{ secrets.DOCKERHUB_ID }}/demo-app:${{ steps.commit.outputs.short }}
    outputs:
      tags: ${{ steps.commit.outputs.short }}

  deploy-to-eks:
    name: Deploy to EKS
    environment: DEV
    env:
        NAMESPACE: ${{ vars.NAMESPACE }}
        REPONAME: ${{ github.event.repository.name }}
        DOCKERHUB_ID: ${{ secrets.DOCKERHUB_ID }}
        ENV: ${{ github.event.inputs.environment }}
        TAGS: ${{ needs.build-push-container-image.outputs.tags }}
    needs: ["build-push-container-image"]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: envsubst
      run : |
       envsubst < kube_manifests/deployment.tpl > deployment.yml && cat ./deployment.yml 
    - name: Install kubectl 
      run : |
       curl -LO "https://dl.k8s.io/release/v1.25.2/bin/linux/amd64/kubectl"
       sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
    # - name: Configure AWS Credentials
    #   uses: aws-actions/configure-aws-credentials@v4
    #   with:
    #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     aws-region: ap-southeast-1
    - name: Configure AWS Credentials 
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_ROLE }}
        aws-region: ${{ secrets.AWS_REGION }}
        role-session-name: GitHub-Deploy-EKS
    - name: update kubeconfig
      run: |
        aws eks update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }} --region=ap-southeast-1
    - name: Apply YAML
      run: |
        kubectl apply -f deployment.yml

