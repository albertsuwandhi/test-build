name: 'Create Initial Resources'

on:
  push: 
  workflow_dispatch:
    branches:
      - main
    inputs:
      environment:
        type: choice
        description: environment
        options: 
        - dev
        - prod

permissions:
  id-token: write # This is required for AWS oidc connection
  contents: read # This is required for actions/checkout
  pull-requests: write # This is required for gh bot to comment PR

jobs:
#   build-push-container-image:
#     name: Build and Push Container Image
#     environment: dev
#     runs-on: ubuntu-latest
#     env:
#       REPONAME: ${{ github.event.repository.name }}
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v3
#       - id: commit
#         uses: prompt/actions-commit-hash@v3
#       - name: Install Node
#         uses: actions/setup-node@v3
#         with:
#           node-version: '14'
#           cache: "npm"
#           cache-dependency-path: package-lock.json
#       - name: npm install build 
#         run: | 
#           npm install
#           npm run build
#       - name: Login to Docker Hub
#         uses: docker/login-action@v3
#         with:
#           username: ${{ vars.DOCKERHUB_ID}}
#           password: ${{ secrets.DOCKERHUB_PASSWORD }}
#       - name: setup Docker Buildx
#         uses: docker/setup-buildx-action@v2
#       - name: Build and push
#         uses: docker/build-push-action@v4
#         with:
#           context: .
#           file: ./build/Dockerfile
#           push: true
#           tags: | 
#             ${{ vars.DOCKERHUB_ID }}/${{ env.REPONAME }}:dev
#             ${{ vars.DOCKERHUB_ID }}/${{ env.REPONAME }}:${{ steps.commit.outputs.short }}
#     outputs:
#       tags: ${{ steps.commit.outputs.short }}

  Create-Initial-Resources:
    name: Create Initial Resources
    environment: ${{ github.event.inputs.environment }}
    env:
        NAMESPACE: ${{ vars.NAMESPACE }}
        REPONAME: ${{ github.event.repository.name }}
    #     REPLICAS: ${{ vars.REPLICAS }}
    #     DOCKERHUB_ID: ${{ vars.DOCKERHUB_ID }}
    #     TAGS: ${{ needs.build-push-container-image.outputs.tags }}
    # needs: ["build-push-container-image"]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: envsubst
      run : |
       envsubst < kube_manifests/dopplersecret.tpl.yml > dopplersecret.yml && cat ./dopplersecret.yml 
    - name: install kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'v1.25.12' # default is latest stable, please use the same version of the cluster or +/- 1 
    - name: Configure AWS Credentials 
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
        aws-region: ${{ vars.AWS_REGION }}
        role-session-name: GitHub-Deploy-EKS
    - name: update kubeconfig
      run: |
        aws eks update-kubeconfig --name ${{ vars.EKS_CLUSTER_NAME }} --region=${{ vars.AWS_REGION }}
    - name: Apply YAML
      run: |
        kubectl create secret generic doppler-token-secret-$REPONAME --namespace doppler-operator-system --from-literal=serviceToken=${{ secrets.DOPPLER_SERVICE_TOKEN }} 
        kubectl apply -f dopplersecret.yml